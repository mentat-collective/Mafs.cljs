{"version":3,"sources":["mafs.cljs"],"mappings":"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","names":["mafs/Theme","cljs.core.js__GT_clj","js/module$node_modules$mafs$build$index.Theme","mafs/labelPi","js/module$node_modules$mafs$build$index.labelPi","mafs/useTransformContext","js/module$node_modules$mafs$build$index.useTransformContext","mafs/useStopwatch","js/module$node_modules$mafs$build$index.useStopwatch","reagent.core/adapt-react-class","mafs/Mafs","js/module$node_modules$mafs$build$index.Mafs","mafs/Point","js/module$node_modules$mafs$build$index.Point","mafs/Polygon","js/module$node_modules$mafs$build$index.Polygon","mafs/Ellipse","js/module$node_modules$mafs$build$index.Ellipse","p__48173","map__48174","cljs.core/--destructure-map","cljs.core.get","mafs/Circle","radius","props","cljs.core.assoc","mafs/Text","js/module$node_modules$mafs$build$index.Text","mafs/Vector","js/module$node_modules$mafs$build$index.Vector","mafs/Transform","js/module$node_modules$mafs$build$index.Transform","mafs/named-constraints","s","initial","G__48176","p__48177","vec__48179","cljs.core.nth","x","_","p__48182","vec__48183","y","cljs.core.ex_info","mafs/constrain->fn","constrain","cljs.core/fn?","cljs.core.comp","cljs.core/clj->js","cljs.core/Keyword","cljs.core/name","mafs/path->get","path","p1__48194#","p1__48195#","cljs.core/deref","cljs.core/vector?","cljs.core.get_in","mafs/path->set","p1__48196#","p2__48197#","p1__48198#","p2__48199#","cljs.core/reset!","cljs.core.swap_BANG_","cljs.core/assoc-in","cljs.core/assoc","p__48205","map__48206","mafs/MovablePoint","!state","point","on-move","opts","and__5043__auto__","js/console.warn","cljs.core/not","get","set","or__5045__auto__","cljs.core.dissoc","p__48225","map__48226","with-let48230","reagent.ratom/with-let-values","temp__5808__auto__","reagent.ratom/*ratom-context*","c__40743__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init48231","res48232","reagent.core.atom","js/module$node_modules$mafs$build$index.MovablePoint","new-point","xy"],"sourcesContent":["(ns mafs\n  (:require [\"mafs\" :as m]\n            [mafs.macros :refer [defcomponent]]\n            [reagent.core :as reagent]))\n\n;; TODO process the function argument return values to return js arrays vs\n;; vectors.\n\n;; ## Helpers\n\n(def Theme\n  (js->clj m/Theme :keywordize-keys true))\n\n(def labelPi m/labelPi)\n(def useTransformContext m/useTransformContext)\n(def useStopwatch m/useStopwatch)\n\n;; ## Components\n\n(defcomponent Mafs\n  \"\n  - `:width`\n  - `:height`\n  - `:pan`\n  - `:viewbox`\n  - `:preserve-aspect-ratio`\n  - `:ssr`\n  \"\n  m/Mafs)\n\n\n\n(defcomponent Point\n  \"\n  - `:x`\n  - `:y`\n  - `:color`\n  - `:opacity`\n  - `:svg-circle-props`\n\"\n  m/Point)\n\n(defcomponent Polygon\n  \"\n  - `:points`\n  - `:svg-polygon-props`\n  - `:color`\n  - `:weight`\n  - `:fill-opacity`\n  - `:stroke-opacity`\n  - `:stroke-style`\n  \"\n  m/Polygon)\n\n(defcomponent Ellipse\n  \"\n  - `:center`\n  - `:radius`\n  - `:svg-ellipse-props`\n  - `:color`\n  - `:weight`\n  - `:fill-opacity`\n  - `:stroke-opacity`\n  - `:stroke-style`\n  \"\n  m/Ellipse)\n\n\n(defn Circle\n  \"\n  - `:center`\n  - `:radius`\n  - `:svg-ellipse-props`\n  - `:color`\n  - `:weight`\n  - `:fill-opacity`\n  - `:stroke-opacity`\n  - `:stroke-style`\n  \"\n  [{:keys [radius] :as props}]\n  [Ellipse\n   (assoc props :radius [radius radius])])\n\n(defcomponent Text\n  \"\n  - `:x`\n  - `:y`\n  - `:attach`\n  - `:attach-distance`\n  - `:size`\n  - `:color`\n  - `:svg-text-props`\n  \"\n  m/Text)\n\n(defcomponent Vector\n  \"\n  - `:tail`\n  - `:tip`\n  - `:svg-line-props`\n  - `:color`\n  - `:opacity`\n  - `:weight`\n  - `:style`\n  \"\n  m/Vector)\n\n(defcomponent Transform\n  \"\n  - `:matrix`\n  - `:translate`\n  - `:scale`\n  - `:rotate`\n  - `:shear`\n  \"\n  m/Transform)\n\n(defn ^:no-doc named-constraints\n  [s initial]\n  (case s\n    \"horizontal\" (fn [[x _]] #js [x (nth initial 1)])\n    \"vertical\"   (fn [[_ y]] #js [(nth initial 0) y])\n    (throw\n     (ex-info\n      \"Invalid constraint name: \"\n      {:constrain s}))))\n\n(defn ^:no-doc constrain->fn [constrain initial]\n  (cond (nil? constrain) nil\n        (fn? constrain) (comp clj->js constrain)\n\n        (or (keyword? constrain)\n            (string? constrain))\n        (named-constraints (name constrain) initial)\n\n        :else\n        (throw\n         (ex-info \"Invalid constraint!\"\n                  {:constrain constrain}))))\n\n(defn ^:no-doc path->get [path]\n  (cond (nil? path)    deref\n        (vector? path) #(get-in (deref %) path)\n        :else          #(get (deref %) path)))\n\n(defn ^:no-doc path->set [path]\n  (cond (nil? path)    reset!\n        (vector? path) #(swap! %1 assoc-in path %2)\n        :else          #(swap! %1 assoc path %2)))\n\n(defn MovablePoint\n  \"This version takes an atom and, optionally, a path into the atom.\n  - `:atom`\n  - `:path` optional\n  - `:constrain`\n  - `:color`\n\n  also discuss\n\n  - `:point`\n  - `:on-move`\"\n  [{!state :atom :keys [point path constrain on-move] :as opts}]\n  (when (and !state point)\n    (js/console.warn\n     (str \"`:point` \" point \" will be ignored in favor of the entry in the\n     supplied `:atom`.\")))\n\n  (when (not !state)\n    (when (not point)\n      (js/console.warn\n       (str \"`:atom` and `:point` are both missing! Please supply one or the\n     other to initialize the point's position. Using default of `[0 0]`.\")))\n\n    (when (not on-move)\n      (js/console.warn\n       (str \"`:atom` and `:on-move` are both missing! Please supply one or the\n     other to capture state changes.\"))))\n\n  (let [get       (path->get path)\n        set       (path->set path)\n        initial   (if !state\n                    (get !state)\n                    (or point [0 0]))\n        constrain (constrain->fn constrain initial)\n        ;; TODO report if constrain is nil, error!\n        opts (if constrain\n               (assoc opts  :constrain constrain)\n               (dissoc opts :constrain))]\n    (fn [{!state :atom on-move :on-move}]\n      (reagent/with-let [!state (or !state (reagent/atom initial))]\n        [:> m/MovablePoint\n         (assoc opts\n                :point (get !state)\n                :on-move\n                (fn [new-point]\n                  (let [xy [(aget new-point 0) (aget new-point 1)]]\n                    (set !state xy)\n                    (when on-move\n                      (on-move xy)))))]))))\n"]}