import "./cljs_env.js";
shadow$provide.module$node_modules$use_resize_observer$dist$bundle_cjs=function(global,require,module,exports){function useResolvedElement(subscriber,refOrElement){var lastReportRef=react.useRef(null),refOrElementRef=react.useRef(null);refOrElementRef.current=refOrElement;var cbElementRef=react.useRef(null);react.useEffect(function(){evaluateSubscription()});var evaluateSubscription=react.useCallback(function(){var cbElement=cbElementRef.current,refOrElement=refOrElementRef.current;cbElement=cbElement?
cbElement:refOrElement?refOrElement instanceof Element?refOrElement:refOrElement.current:null;lastReportRef.current&&lastReportRef.current.element===cbElement&&lastReportRef.current.subscriber===subscriber||(lastReportRef.current&&lastReportRef.current.cleanup&&lastReportRef.current.cleanup(),lastReportRef.current={element:cbElement,subscriber,cleanup:cbElement?subscriber(cbElement):void 0})},[subscriber]);react.useEffect(function(){return function(){lastReportRef.current&&lastReportRef.current.cleanup&&
(lastReportRef.current.cleanup(),lastReportRef.current=null)}},[]);return react.useCallback(function(element){cbElementRef.current=element;evaluateSubscription()},[evaluateSubscription])}function extractSize(entry,boxProp,sizeType){if(entry[boxProp])return entry[boxProp][0]?entry[boxProp][0][sizeType]:entry[boxProp][sizeType];if("contentBoxSize"===boxProp)return entry.contentRect["inlineSize"===sizeType?"width":"height"]}var react=require("module$node_modules$react$index");module.exports=function(opts){void 0===
opts&&(opts={});var onResize=opts.onResize,onResizeRef=react.useRef(void 0);onResizeRef.current=onResize;var round=opts.round||Math.round,resizeObserverRef=react.useRef();onResize=react.useState({width:void 0,height:void 0});var size=onResize[0],setSize=onResize[1],didUnmount=react.useRef(!1);react.useEffect(function(){didUnmount.current=!1;return function(){didUnmount.current=!0}},[]);var previous=react.useRef({width:void 0,height:void 0}),refCallback=useResolvedElement(react.useCallback(function(element){resizeObserverRef.current&&
resizeObserverRef.current.box===opts.box&&resizeObserverRef.current.round===round||(resizeObserverRef.current={box:opts.box,round,instance:new ResizeObserver(function(entries){var entry=entries[0],boxProp="border-box"===opts.box?"borderBoxSize":"device-pixel-content-box"===opts.box?"devicePixelContentBoxSize":"contentBoxSize";entries=extractSize(entry,boxProp,"inlineSize");entry=extractSize(entry,boxProp,"blockSize");entries=entries?round(entries):void 0;entry=entry?round(entry):void 0;if(previous.current.width!==
entries||previous.current.height!==entry)boxProp={width:entries,height:entry},previous.current.width=entries,previous.current.height=entry,onResizeRef.current?onResizeRef.current(boxProp):didUnmount.current||setSize(boxProp)})});resizeObserverRef.current.instance.observe(element,{box:opts.box});return function(){resizeObserverRef.current&&resizeObserverRef.current.instance.unobserve(element)}},[opts.box,round]),opts.ref);return react.useMemo(function(){return{ref:refCallback,width:size.width,height:size.height}},
[refCallback,size.width,size.height])}}
//# sourceMappingURL=module$node_modules$use_resize_observer$dist$bundle_cjs.js.map
